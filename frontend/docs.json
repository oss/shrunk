{
  "id": 0,
  "name": "shrunk",
  "kind": 0,
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 1,
      "name": "Shrunk",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the [[Shrunk]] component"
      },
      "children": [
        {
          "id": 6,
          "name": "Shrunk",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "The [[Shrunk]] component is the root component of the application. It is\nresponsible for setting up the root-level layout, the router, and managing\nnavigation between views."
          },
          "children": [
            {
              "id": 7,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 8,
                  "name": "new Shrunk",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 9,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 2,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 6,
                    "name": "Shrunk"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component<Props, State>.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component<Props, State>.constructor"
              }
            },
            {
              "id": 10,
              "name": "componentDidMount",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/Shrunk.tsx",
                  "line": 131,
                  "character": 25
                }
              ],
              "signatures": [
                {
                  "id": 11,
                  "name": "componentDidMount",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidMount"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidMount"
              }
            },
            {
              "id": 17,
              "name": "render",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/Shrunk.tsx",
                  "line": 183,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 18,
                  "name": "render",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ReactNode"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.render"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.render"
              }
            },
            {
              "id": 14,
              "name": "setSelectedKeysFromLocation",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/Shrunk.tsx",
                  "line": 157,
                  "character": 29
                }
              ],
              "signatures": [
                {
                  "id": 15,
                  "name": "setSelectedKeysFromLocation",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Sets the active tabs in the navbar based on the current view.",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 16,
                      "name": "location",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The location given by the history.listen event\n"
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "name": "State"
                          }
                        ],
                        "name": "Location"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 12,
              "name": "updatePendingAlerts",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/Shrunk.tsx",
                  "line": 144,
                  "character": 21
                }
              ],
              "signatures": [
                {
                  "id": 13,
                  "name": "updatePendingAlerts",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Fetches list of pending alerts from backend and updates state.",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [7]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [10, 17, 14, 12]
            }
          ],
          "sources": [
            {
              "fileName": "src/Shrunk.tsx",
              "line": 107,
              "character": 19
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 2,
                  "name": "Props"
                },
                {
                  "type": "reference",
                  "name": "State"
                }
              ],
              "name": "Component"
            }
          ]
        },
        {
          "id": 2,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Properties of the [[Shrunk]] component.",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 3,
              "name": "netid",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "NetID of the user.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/Shrunk.tsx",
                  "line": 47,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 4,
              "name": "siderWidth",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Width of the siders in the layout.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/Shrunk.tsx",
                  "line": 53,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 5,
              "name": "userPrivileges",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "A set of the user's privileges.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/Shrunk.tsx",
                  "line": 59,
                  "character": 16
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Set"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [3, 4, 5]
            }
          ],
          "sources": [
            {
              "fileName": "src/Shrunk.tsx",
              "line": 42,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [6]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [2]
        }
      ],
      "sources": [
        {
          "fileName": "src/Shrunk.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 19,
      "name": "Validators",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements some functions used to perform field validation in certain cases where\nthe validation cannot be implemented client-side"
      },
      "children": [
        {
          "id": 24,
          "name": "serverValidateDuplicateAlias",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "src/Validators.tsx",
              "line": 40,
              "character": 41
            }
          ],
          "signatures": [
            {
              "id": 25,
              "name": "serverValidateDuplicateAlias",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Check whether an alias is allowed",
                "tags": [
                  {
                    "tag": "function",
                    "text": ""
                  },
                  {
                    "tag": "throws",
                    "text": "Error if the alias already exists\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 26,
                  "name": "_rule",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The rule"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 27,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The alias"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 28,
          "name": "serverValidateLongUrl",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "src/Validators.tsx",
              "line": 63,
              "character": 34
            }
          ],
          "signatures": [
            {
              "id": 29,
              "name": "serverValidateLongUrl",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Check whether a long URL is allowed",
                "tags": [
                  {
                    "tag": "function",
                    "text": ""
                  },
                  {
                    "tag": "throws",
                    "text": "Error if the long URL is not allowed\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 30,
                  "name": "_rule",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The rule"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 31,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The long URL"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 32,
          "name": "serverValidateNetId",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "src/Validators.tsx",
              "line": 86,
              "character": 32
            }
          ],
          "signatures": [
            {
              "id": 33,
              "name": "serverValidateNetId",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Check whether a NetID is valid",
                "tags": [
                  {
                    "tag": "function",
                    "text": ""
                  },
                  {
                    "tag": "throws",
                    "text": "[[Error]] if the NetID is invalid\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 34,
                  "name": "_rule",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The rule"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 35,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The NetID"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 20,
          "name": "serverValidateReservedAlias",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "src/Validators.tsx",
              "line": 17,
              "character": 40
            }
          ],
          "signatures": [
            {
              "id": 21,
              "name": "serverValidateReservedAlias",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Check whether an alias is allowed",
                "tags": [
                  {
                    "tag": "function",
                    "text": ""
                  },
                  {
                    "tag": "throws",
                    "text": "Error if the alias is a reserved word\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 22,
                  "name": "_rule",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The rule"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 23,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The alias"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Functions",
          "kind": 64,
          "children": [24, 28, 32, 20]
        }
      ],
      "sources": [
        {
          "fileName": "src/Validators.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 36,
      "name": "admin/AdminStats",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the [[AdminStats]] component"
      },
      "children": [
        {
          "id": 38,
          "name": "AdminStats",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "The [[AdminStats]] component allows the user to view summary statistics\nabout the total number of links, users, and visits on Shrunk, as well\nas to view statistics about the number of visits to each Flask endpoint"
          },
          "children": [
            {
              "id": 39,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 40,
                  "name": "new AdminStats",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 41,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 37,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 38,
                    "name": "AdminStats"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component<Props, State>.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component<Props, State>.constructor"
              }
            },
            {
              "id": 42,
              "name": "componentDidMount",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/admin/AdminStats.tsx",
                  "line": 164,
                  "character": 25
                }
              ],
              "signatures": [
                {
                  "id": 43,
                  "name": "componentDidMount",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidMount"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidMount"
              }
            },
            {
              "id": 53,
              "name": "render",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/admin/AdminStats.tsx",
                  "line": 224,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 54,
                  "name": "render",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ReactNode"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.render"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.render"
              }
            },
            {
              "id": 48,
              "name": "submitRangeForm",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/admin/AdminStats.tsx",
                  "line": 208,
                  "character": 17
                }
              ],
              "signatures": [
                {
                  "id": 49,
                  "name": "submitRangeForm",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Update the date range for the admin stats query when the admin stats form is submitted",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 50,
                      "name": "values",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The values from the time range form\n"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 51,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 52,
                              "name": "range",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/admin/AdminStats.tsx",
                                  "line": 209,
                                  "character": 9
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "array",
                                    "elementType": {
                                      "type": "reference",
                                      "name": "Moment"
                                    }
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [52]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 44,
              "name": "updateAdminData",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/admin/AdminStats.tsx",
                  "line": 173,
                  "character": 17
                }
              ],
              "signatures": [
                {
                  "id": 45,
                  "name": "updateAdminData",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute a query to the admin stats API endpoint, with time-range parameters\ntaken from `state.adminDataRange`, if that value is not `null`",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 46,
              "name": "updateEndpointData",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/admin/AdminStats.tsx",
                  "line": 195,
                  "character": 20
                }
              ],
              "signatures": [
                {
                  "id": 47,
                  "name": "updateEndpointData",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Fetch the endpoint stats data from the backend",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [39]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [42, 53, 48, 44, 46]
            }
          ],
          "sources": [
            {
              "fileName": "src/admin/AdminStats.tsx",
              "line": 154,
              "character": 23
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 37,
                  "name": "Props"
                },
                {
                  "type": "reference",
                  "name": "State"
                }
              ],
              "name": "Component"
            }
          ]
        },
        {
          "id": 37,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[AdminStats]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/admin/AdminStats.tsx",
              "line": 121,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [38]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [37]
        }
      ],
      "sources": [
        {
          "fileName": "src/admin/AdminStats.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 55,
      "name": "admin/Role",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the [[Role]] component"
      },
      "children": [
        {
          "id": 59,
          "name": "Role",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "The [[Role]] component allows the user to view, add, and delete entities with\na particular role"
          },
          "children": [
            {
              "id": 60,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 61,
                  "name": "new Role",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 62,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 56,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 59,
                    "name": "Role"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component<Props, State>.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component<Props, State>.constructor"
              }
            },
            {
              "id": 63,
              "name": "componentDidMount",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/admin/Role.tsx",
                  "line": 249,
                  "character": 25
                }
              ],
              "signatures": [
                {
                  "id": 64,
                  "name": "componentDidMount",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidMount"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidMount"
              }
            },
            {
              "id": 65,
              "name": "componentDidUpdate",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/admin/Role.tsx",
                  "line": 254,
                  "character": 26
                }
              ],
              "signatures": [
                {
                  "id": 66,
                  "name": "componentDidUpdate",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 67,
                      "name": "prevProps",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 56,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidUpdate"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidUpdate"
              }
            },
            {
              "id": 76,
              "name": "onGrant",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/admin/Role.tsx",
                  "line": 321,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 77,
                  "name": "onGrant",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API requests to grant the role to a new entity",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 78,
                      "name": "entity",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The entity to which to grant the role"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 79,
                      "name": "comment",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The comment\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 80,
              "name": "onRevoke",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/admin/Role.tsx",
                  "line": 336,
                  "character": 10
                }
              ],
              "signatures": [
                {
                  "id": 81,
                  "name": "onRevoke",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API requests to revoke a role from an entity",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 82,
                      "name": "entity",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The entity from which to revoke the role\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 83,
              "name": "render",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/admin/Role.tsx",
                  "line": 344,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 84,
                  "name": "render",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ReactNode"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.render"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.render"
              }
            },
            {
              "id": 68,
              "name": "updateHasPermission",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/admin/Role.tsx",
                  "line": 266,
                  "character": 21
                }
              ],
              "signatures": [
                {
                  "id": 69,
                  "name": "updateHasPermission",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Determine whether the user has permission to view/edit the given\nrole based on the role name and the user's permissions",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 74,
              "name": "updateRoleEntities",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/admin/Role.tsx",
                  "line": 308,
                  "character": 20
                }
              ],
              "signatures": [
                {
                  "id": 75,
                  "name": "updateRoleEntities",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Fetch the role entities from the backend",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 70,
              "name": "updateRoleInfo",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/admin/Role.tsx",
                  "line": 287,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 71,
                  "name": "updateRoleInfo",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Fetch the role text and role entities from the backend",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 72,
              "name": "updateRoleText",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/admin/Role.tsx",
                  "line": 297,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 73,
                  "name": "updateRoleText",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Fetch the role text from the backend",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [60]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [63, 65, 76, 80, 83, 68, 74, 70, 72]
            }
          ],
          "sources": [
            {
              "fileName": "src/admin/Role.tsx",
              "line": 239,
              "character": 17
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 56,
                  "name": "Props"
                },
                {
                  "type": "reference",
                  "name": "State"
                }
              ],
              "name": "Component"
            }
          ]
        },
        {
          "id": 56,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[Role]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 58,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The role's name (internal identifier, not the display name)",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/admin/Role.tsx",
                  "line": 28,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 57,
              "name": "userPrivileges",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's privileges, used to determine whether the user is allowed\nto edit the present role",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/admin/Role.tsx",
                  "line": 22,
                  "character": 16
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Set"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [58, 57]
            }
          ],
          "sources": [
            {
              "fileName": "src/admin/Role.tsx",
              "line": 16,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [59]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [56]
        }
      ],
      "sources": [
        {
          "fileName": "src/admin/Role.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 85,
      "name": "alerts/Orgsv2Alerts",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the [[Orgsv2AlertNewUser]] and [[Orgsv2AlertCurrentUser]] components."
      },
      "children": [
        {
          "id": 87,
          "name": "Orgsv2AlertCurrentUser",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "src/alerts/Orgsv2Alerts.tsx",
              "line": 53,
              "character": 35
            }
          ],
          "type": {
            "type": "reference",
            "id": 89,
            "name": "Alert"
          },
          "defaultValue": "..."
        },
        {
          "id": 86,
          "name": "Orgsv2AlertNewUser",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "src/alerts/Orgsv2Alerts.tsx",
              "line": 26,
              "character": 31
            }
          ],
          "type": {
            "type": "reference",
            "id": 89,
            "name": "Alert"
          },
          "defaultValue": "..."
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "kind": 32,
          "children": [87, 86]
        }
      ],
      "sources": [
        {
          "fileName": "src/alerts/Orgsv2Alerts.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 88,
      "name": "alerts/PendingAlerts",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the [[PendingAlerts]] component"
      },
      "children": [
        {
          "id": 99,
          "name": "PendingAlerts",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "The [[PendingAlerts]] component implements a modal that displays\nalerts to the user and marks these alerts as viewed on the server"
          },
          "children": [
            {
              "id": 100,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 101,
                  "name": "new PendingAlerts",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 102,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 96,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 99,
                    "name": "PendingAlerts"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component<Props, State>.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component<Props, State>.constructor"
              }
            },
            {
              "id": 103,
              "name": "nextAlert",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/alerts/PendingAlerts.tsx",
                  "line": 87,
                  "character": 11
                }
              ],
              "signatures": [
                {
                  "id": 104,
                  "name": "nextAlert",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API request to mark an alert as viewed serverside, and update\nthe component state accordingly",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 105,
                      "name": "alertViewed",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The identifier of the alert viewed\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 106,
              "name": "render",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/alerts/PendingAlerts.tsx",
                  "line": 98,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 107,
                  "name": "render",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ReactNode"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.render"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.render"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [100]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [103, 106]
            }
          ],
          "sources": [
            {
              "fileName": "src/alerts/PendingAlerts.tsx",
              "line": 73,
              "character": 26
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 96,
                  "name": "Props"
                },
                {
                  "type": "reference",
                  "name": "State"
                }
              ],
              "name": "Component"
            }
          ]
        },
        {
          "id": 89,
          "name": "Alert",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Information required to display an alert box",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 91,
              "name": "body",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The component to display in the modal's content area",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/alerts/PendingAlerts.tsx",
                  "line": 26,
                  "character": 6
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 92,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 93,
                          "name": "closePopup",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/alerts/PendingAlerts.tsx",
                              "line": 26,
                              "character": 44
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 94,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 95,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "intrinsic",
                                        "name": "void"
                                      }
                                    ],
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [93]
                        }
                      ]
                    }
                  }
                ],
                "name": "FunctionComponent"
              }
            },
            {
              "id": 90,
              "name": "title",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The title of the modal",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/alerts/PendingAlerts.tsx",
                  "line": 20,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [91, 90]
            }
          ],
          "sources": [
            {
              "fileName": "src/alerts/PendingAlerts.tsx",
              "line": 15,
              "character": 22
            }
          ]
        },
        {
          "id": 96,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[PendingAlerts]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 97,
              "name": "netid",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's NetID",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/alerts/PendingAlerts.tsx",
                  "line": 47,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 98,
              "name": "pendingAlerts",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "List of alert names to be displayed",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/alerts/PendingAlerts.tsx",
                  "line": 53,
                  "character": 15
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [97, 98]
            }
          ],
          "sources": [
            {
              "fileName": "src/alerts/PendingAlerts.tsx",
              "line": 42,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [99]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [89, 96]
        }
      ],
      "sources": [
        {
          "fileName": "src/alerts/PendingAlerts.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 108,
      "name": "api/Org",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements some functions for interacting with the org API"
      },
      "children": [
        {
          "id": 109,
          "name": "MemberInfo",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Data pertaining to one member of an org",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 110,
              "name": "is_admin",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Whether the member is an admin of the org",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/api/Org.tsx",
                  "line": 15,
                  "character": 10
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 111,
              "name": "netid",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The NetID of the member",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/api/Org.tsx",
                  "line": 21,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 112,
              "name": "timeCreated",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "When the member was added to the org",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/api/Org.tsx",
                  "line": 27,
                  "character": 13
                }
              ],
              "type": {
                "type": "reference",
                "name": "Date"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [110, 111, 112]
            }
          ],
          "sources": [
            {
              "fileName": "src/api/Org.tsx",
              "line": 10,
              "character": 27
            }
          ]
        },
        {
          "id": 113,
          "name": "OrgInfo",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Data pertaining to one org",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 114,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The ID of the org",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/api/Org.tsx",
                  "line": 39,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 119,
              "name": "is_admin",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Whether the user who performed the API request is an admin of the org",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/api/Org.tsx",
                  "line": 69,
                  "character": 10
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 118,
              "name": "is_member",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Whether the user who performed the API request is a member of the org",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/api/Org.tsx",
                  "line": 63,
                  "character": 11
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 116,
              "name": "members",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "A [[MemberInfo]] for each member of the org",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/api/Org.tsx",
                  "line": 51,
                  "character": 9
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 109,
                  "name": "MemberInfo"
                }
              }
            },
            {
              "id": 115,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The name of the org",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/api/Org.tsx",
                  "line": 45,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 117,
              "name": "timeCreated",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "When the org was created",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/api/Org.tsx",
                  "line": 57,
                  "character": 13
                }
              ],
              "type": {
                "type": "reference",
                "name": "Date"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [114, 119, 118, 116, 115, 117]
            }
          ],
          "sources": [
            {
              "fileName": "src/api/Org.tsx",
              "line": 34,
              "character": 24
            }
          ]
        },
        {
          "id": 126,
          "name": "createOrg",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "src/api/Org.tsx",
              "line": 117,
              "character": 22
            }
          ],
          "signatures": [
            {
              "id": 127,
              "name": "createOrg",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Create a new org with a given name",
                "tags": [
                  {
                    "tag": "function",
                    "text": ""
                  }
                ]
              },
              "parameters": [
                {
                  "id": 128,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The name of the org to create\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 129,
          "name": "deleteOrg",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "src/api/Org.tsx",
              "line": 130,
              "character": 22
            }
          ],
          "signatures": [
            {
              "id": 130,
              "name": "deleteOrg",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Delete an org",
                "tags": [
                  {
                    "tag": "function",
                    "text": ""
                  }
                ]
              },
              "parameters": [
                {
                  "id": 131,
                  "name": "id",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The ID of the org to delete\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 123,
          "name": "getOrgInfo",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "src/api/Org.tsx",
              "line": 95,
              "character": 23
            }
          ],
          "signatures": [
            {
              "id": 124,
              "name": "getOrgInfo",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Get info for an org by its ID",
                "tags": [
                  {
                    "tag": "function",
                    "text": ""
                  }
                ]
              },
              "parameters": [
                {
                  "id": 125,
                  "name": "id",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The ID of the org for which to fetch info\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 113,
                    "name": "OrgInfo"
                  }
                ],
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 120,
          "name": "listOrgs",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "src/api/Org.tsx",
              "line": 77,
              "character": 21
            }
          ],
          "signatures": [
            {
              "id": 121,
              "name": "listOrgs",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Get a list of [[OrgInfo]]",
                "tags": [
                  {
                    "tag": "function",
                    "text": ""
                  }
                ]
              },
              "parameters": [
                {
                  "id": 122,
                  "name": "which",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "Whether to list all orgs or orgs of which the user is a member\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "all"
                      },
                      {
                        "type": "literal",
                        "value": "user"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 113,
                      "name": "OrgInfo"
                    }
                  }
                ],
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [109, 113]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [126, 129, 123, 120]
        }
      ],
      "sources": [
        {
          "fileName": "src/api/Org.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 132,
      "name": "components/CreateLinkForm",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the [[CreateLinkForm]] component."
      },
      "children": [
        {
          "id": 138,
          "name": "CreateLinkForm",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "The [[CreateLinkForm]] component allows the user to create a new link"
          },
          "children": [
            {
              "id": 139,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 140,
                  "name": "new CreateLinkForm",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 141,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 133,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 138,
                    "name": "CreateLinkForm"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component<Props, State>.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component<Props, State>.constructor"
              }
            },
            {
              "id": 142,
              "name": "formRef",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/CreateLinkForm.tsx",
                  "line": 120,
                  "character": 9
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "FormInstance"
                  }
                ],
                "name": "RefObject"
              },
              "defaultValue": "..."
            },
            {
              "id": 145,
              "name": "createLink",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/CreateLinkForm.tsx",
                  "line": 137,
                  "character": 12
                }
              ],
              "signatures": [
                {
                  "id": 146,
                  "name": "createLink",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Executes API requests to create a new link and then calls the `onFinish` callback"
                  },
                  "parameters": [
                    {
                      "id": 147,
                      "name": "values",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The values from the form\n"
                      },
                      "type": {
                        "type": "reference",
                        "name": "CreateLinkFormValues"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 148,
              "name": "render",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/CreateLinkForm.tsx",
                  "line": 184,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 149,
                  "name": "render",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ReactNode"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.render"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.render"
              }
            },
            {
              "id": 143,
              "name": "toggleLoading",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/CreateLinkForm.tsx",
                  "line": 129,
                  "character": 15
                }
              ],
              "signatures": [
                {
                  "id": 144,
                  "name": "toggleLoading",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [139]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [142]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [145, 148, 143]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/CreateLinkForm.tsx",
              "line": 119,
              "character": 27
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 133,
                  "name": "Props"
                },
                {
                  "type": "reference",
                  "name": "State"
                }
              ],
              "name": "Component"
            }
          ]
        },
        {
          "id": 133,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[CreateLinkForm]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 135,
              "name": "onFinish",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback called after the user submits the form and the new link is created",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/CreateLinkForm.tsx",
                  "line": 104,
                  "character": 10
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 136,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 137,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        ],
                        "name": "Promise"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 134,
              "name": "userPrivileges",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's privileges. Used to determine whether the user is allowed\nto set custom aliases",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/CreateLinkForm.tsx",
                  "line": 98,
                  "character": 16
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Set"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [135, 134]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/CreateLinkForm.tsx",
              "line": 93,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [138]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [133]
        }
      ],
      "sources": [
        {
          "fileName": "src/components/CreateLinkForm.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 150,
      "name": "components/Csv",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements utility functions to create CSV files from visit data"
      },
      "children": [
        {
          "id": 155,
          "name": "AnonymizedVisit",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Anonymized visit information, as fetched from the backend",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 157,
              "name": "alias",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/Csv.tsx",
                  "line": 14,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 162,
              "name": "country_code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/Csv.tsx",
                  "line": 19,
                  "character": 14
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 156,
              "name": "link_id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/Csv.tsx",
                  "line": 13,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 160,
              "name": "referer",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/Csv.tsx",
                  "line": 17,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 161,
              "name": "state_code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/Csv.tsx",
                  "line": 18,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 163,
              "name": "time",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/Csv.tsx",
                  "line": 20,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 159,
              "name": "user_agent",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/Csv.tsx",
                  "line": 16,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 158,
              "name": "visitor_id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/Csv.tsx",
                  "line": 15,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [157, 162, 156, 160, 161, 163, 159, 158]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/Csv.tsx",
              "line": 12,
              "character": 32
            }
          ]
        },
        {
          "id": 151,
          "name": "downloadVisitsCsv",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/components/Csv.tsx",
              "line": 69,
              "character": 39
            }
          ],
          "signatures": [
            {
              "id": 152,
              "name": "downloadVisitsCsv",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Fetch the visits data for a given link and (optionally) alias from the server,\nthen create a CSV and initiate a download",
                "tags": [
                  {
                    "tag": "function",
                    "text": ""
                  }
                ]
              },
              "parameters": [
                {
                  "id": 153,
                  "name": "link_id",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The link ID"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 154,
                  "name": "alias",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The alias, or `null` to get all data for the given link ID\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "literal",
                        "value": null
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [155]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [151]
        }
      ],
      "sources": [
        {
          "fileName": "src/components/Csv.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 164,
      "name": "components/EditLinkModal",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the [[EditLinkModal]] component"
      },
      "children": [
        {
          "id": 165,
          "name": "EditLinkFormValues",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "The final values of the edit link form",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 170,
              "name": "aliases",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The new aliases",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/EditLinkModal.tsx",
                  "line": 67,
                  "character": 9
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reflection",
                  "declaration": {
                    "id": 171,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 172,
                        "name": "alias",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/EditLinkModal.tsx",
                            "line": 67,
                            "character": 18
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 173,
                        "name": "description",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/components/EditLinkModal.tsx",
                            "line": 67,
                            "character": 39
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [172, 173]
                      }
                    ]
                  }
                }
              }
            },
            {
              "id": 168,
              "name": "expiration_time",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The new expiration time, or `null` if the expiration time should\nbe cleared",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/EditLinkModal.tsx",
                  "line": 55,
                  "character": 17
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "name": "Moment"
                  }
                ]
              }
            },
            {
              "id": 167,
              "name": "long_url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The new long URL",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/EditLinkModal.tsx",
                  "line": 48,
                  "character": 10
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 169,
              "name": "owner",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The new owner of the link.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/EditLinkModal.tsx",
                  "line": 61,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 166,
              "name": "title",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The new title",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/EditLinkModal.tsx",
                  "line": 42,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [170, 168, 167, 169, 166]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/EditLinkModal.tsx",
              "line": 37,
              "character": 35
            }
          ]
        },
        {
          "id": 174,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props of the [[EditLinkModal]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 178,
              "name": "linkInfo",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The original [[LinkInfo]] of the link to edit",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/EditLinkModal.tsx",
                  "line": 98,
                  "character": 10
                }
              ],
              "type": {
                "type": "reference",
                "id": 226,
                "name": "LinkInfo"
              }
            },
            {
              "id": 177,
              "name": "netid",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "NetID of the user",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/EditLinkModal.tsx",
                  "line": 92,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 183,
              "name": "onCancel",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback that will be called when the user closes the modal without\nsaving their changes",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/EditLinkModal.tsx",
                  "line": 111,
                  "character": 10
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 184,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 185,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 179,
              "name": "onOk",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback that will be called when the user clicks the \"ok\" button",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/EditLinkModal.tsx",
                  "line": 104,
                  "character": 6
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 180,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 181,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 182,
                          "name": "values",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 165,
                            "name": "EditLinkFormValues"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 176,
              "name": "userPrivileges",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's privileges, used to determine whether the user\nmay create custom aliases",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/EditLinkModal.tsx",
                  "line": 86,
                  "character": 16
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Set"
              }
            },
            {
              "id": 175,
              "name": "visible",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Whether the modal is visible",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/EditLinkModal.tsx",
                  "line": 79,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [178, 177, 183, 179, 176, 175]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/EditLinkModal.tsx",
              "line": 74,
              "character": 22
            }
          ]
        },
        {
          "id": 186,
          "name": "EditLinkModal",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "comment": {
            "shortText": "The [[EditLinkModal]] component allows the user to edit a link's information. The user may\n  * Change the title\n  * Change the long URL\n  * Change or remove the link's expiration time\n  * Add, remove, or update aliases. If the user has the `\"power_user\"` privilege, the user may\n    set the text of the alias",
            "tags": [
              {
                "tag": "param",
                "text": "The props\n",
                "param": "props"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/components/EditLinkModal.tsx",
              "line": 123,
              "character": 26
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 174,
                "name": "Props"
              }
            ],
            "name": "React.FC"
          },
          "defaultValue": "..."
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [165, 174]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [186]
        }
      ],
      "sources": [
        {
          "fileName": "src/components/EditLinkModal.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 187,
      "name": "components/FilterDropdown",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the dropdown which allows the user to filter the links that are shown on dashboard"
      },
      "children": [
        {
          "id": 188,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[FilterDropdown]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 194,
              "name": "showDeletedLinks",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback called when the user checks checkbox for showing deleted links",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/FilterDropdown.tsx",
                  "line": 41,
                  "character": 18
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 195,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 196,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 197,
                          "name": "show_deleted_links",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 190,
              "name": "showExpiredLinks",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback called when the user checks checkbox for showing expired links",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/FilterDropdown.tsx",
                  "line": 35,
                  "character": 18
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 191,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 192,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 193,
                          "name": "show_expired_links",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 206,
              "name": "showLinksAfter",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback called when the user choosses a date of which links will be shown after",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/FilterDropdown.tsx",
                  "line": 59,
                  "character": 16
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 207,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 208,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 209,
                          "name": "begin_time",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Moment"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 210,
              "name": "showLinksBefore",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback called when the user chooses a date of which links will be shown before",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/FilterDropdown.tsx",
                  "line": 65,
                  "character": 17
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 211,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 212,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 213,
                          "name": "end_time",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Moment"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 198,
              "name": "sortLinksByKey",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback called when the user changes category under which links will be sorted",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/FilterDropdown.tsx",
                  "line": 47,
                  "character": 16
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 199,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 200,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 201,
                          "name": "key",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 202,
              "name": "sortLinksByOrder",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback called when the user changes order in which links will be sorted",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/FilterDropdown.tsx",
                  "line": 53,
                  "character": 18
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 203,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 204,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 205,
                          "name": "order",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 189,
              "name": "userPrivileges",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's privileges, used to determine whether the user may use the \"all links\" set",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/FilterDropdown.tsx",
                  "line": 29,
                  "character": 16
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Set"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [194, 190, 206, 210, 198, 202, 189]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/FilterDropdown.tsx",
              "line": 24,
              "character": 22
            }
          ]
        },
        {
          "id": 214,
          "name": "FilterDropdown",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "comment": {
            "shortText": "The [[FilterDropdown]] component allows the user to choose specific filters which they want their links to be displayed",
            "tags": [
              {
                "tag": "param",
                "text": "The props\n",
                "param": "props"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/components/FilterDropdown.tsx",
              "line": 72,
              "character": 27
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 188,
                "name": "Props"
              }
            ],
            "name": "React.FC"
          },
          "defaultValue": "..."
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [188]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [214]
        }
      ],
      "sources": [
        {
          "fileName": "src/components/FilterDropdown.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 215,
      "name": "components/LinkInfo",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Defines some interfaces describing API responses"
      },
      "children": [
        {
          "id": 216,
          "name": "AliasInfo",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Information about a single alias",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 217,
              "name": "alias",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The alias name",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 14,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 219,
              "name": "deleted",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Whether the alias is deleted",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 26,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 218,
              "name": "description",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's description of the alias",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 20,
                  "character": 13
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [217, 219, 218]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/LinkInfo.tsx",
              "line": 9,
              "character": 26
            }
          ]
        },
        {
          "id": 220,
          "name": "DeletionInfo",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Information about when and by whom an alias was deleted",
            "tags": [
              {
                "tag": "property",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 221,
              "name": "deleted_by",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "NetID that deleted the alias",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 38,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 222,
              "name": "deleted_time",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Timestamp at which the alias was deleted",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 44,
                  "character": 14
                }
              ],
              "type": {
                "type": "reference",
                "name": "Date"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [221, 222]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/LinkInfo.tsx",
              "line": 33,
              "character": 29
            }
          ]
        },
        {
          "id": 226,
          "name": "LinkInfo",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Information describing a single link",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 237,
              "name": "aliases",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 67,
                  "character": 9
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 216,
                  "name": "AliasInfo"
                }
              }
            },
            {
              "id": 230,
              "name": "created_time",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 60,
                  "character": 14
                }
              ],
              "type": {
                "type": "reference",
                "name": "Date"
              }
            },
            {
              "id": 233,
              "name": "deletion_info",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 63,
                  "character": 15
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "id": 220,
                    "name": "DeletionInfo"
                  }
                ]
              }
            },
            {
              "id": 232,
              "name": "expiration_time",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 62,
                  "character": 17
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "name": "Date"
                  }
                ]
              }
            },
            {
              "id": 227,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 57,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 231,
              "name": "is_expired",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 61,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 229,
              "name": "long_url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 59,
                  "character": 10
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 238,
              "name": "may_edit",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 68,
                  "character": 10
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 236,
              "name": "owner",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 66,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 228,
              "name": "title",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 58,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 235,
              "name": "unique_visits",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 65,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 234,
              "name": "visits",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 64,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                237, 230, 233, 232, 227, 231, 229, 238, 236, 228, 235, 234
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/LinkInfo.tsx",
              "line": 56,
              "character": 25
            }
          ]
        },
        {
          "id": 223,
          "name": "SharingInfo",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 224,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 48,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 225,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkInfo.tsx",
                  "line": 49,
                  "character": 6
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "netid"
                  },
                  {
                    "type": "literal",
                    "value": "org"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [224, 225]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/LinkInfo.tsx",
              "line": 47,
              "character": 28
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [216, 220, 226, 223]
        }
      ],
      "sources": [
        {
          "fileName": "src/components/LinkInfo.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 239,
      "name": "components/LinkRow",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the [[LinkRow]] component"
      },
      "children": [
        {
          "id": 260,
          "name": "LinkRow",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "The [[LinkRow]] component displays the information for a single link\non the dashboard. It provides buttons for editing and deleting the link,\nand viewing link stats or QR codes"
          },
          "children": [
            {
              "id": 261,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 262,
                  "name": "new LinkRow",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 263,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 240,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 260,
                    "name": "LinkRow"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component<Props, State>.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component<Props, State>.constructor"
              }
            },
            {
              "id": 272,
              "name": "cancelRequest",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkRow.tsx",
                  "line": 147,
                  "character": 15
                }
              ],
              "signatures": [
                {
                  "id": 273,
                  "name": "cancelRequest",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API requests to delete the request for edit",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 264,
              "name": "componentDidMount",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkRow.tsx",
                  "line": 91,
                  "character": 19
                }
              ],
              "signatures": [
                {
                  "id": 265,
                  "name": "componentDidMount",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidMount"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidMount"
              }
            },
            {
              "id": 266,
              "name": "confirmDelete",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkRow.tsx",
                  "line": 99,
                  "character": 15
                }
              ],
              "signatures": [
                {
                  "id": 267,
                  "name": "confirmDelete",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API requests to delete the link, then refresh search results",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 268,
              "name": "hasSentRequest",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkRow.tsx",
                  "line": 121,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 269,
                  "name": "hasSentRequest",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Check if request has been sent yet",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 274,
              "name": "render",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkRow.tsx",
                  "line": 158,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 275,
                  "name": "render",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ReactNode"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.render"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.render"
              }
            },
            {
              "id": 270,
              "name": "requestEditAccess",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkRow.tsx",
                  "line": 135,
                  "character": 19
                }
              ],
              "signatures": [
                {
                  "id": 271,
                  "name": "requestEditAccess",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API requests to request edit for the link",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [261]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [272, 264, 266, 268, 274, 270]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/LinkRow.tsx",
              "line": 83,
              "character": 20
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 240,
                  "name": "Props"
                },
                {
                  "type": "reference",
                  "id": 258,
                  "name": "State"
                }
              ],
              "name": "Component"
            }
          ]
        },
        {
          "id": 240,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[LinkRow]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 241,
              "name": "linkInfo",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "[[LinkInfo]] of the link to display",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/LinkRow.tsx",
                  "line": 35,
                  "character": 10
                }
              ],
              "type": {
                "type": "reference",
                "id": 226,
                "name": "LinkInfo"
              }
            },
            {
              "id": 242,
              "name": "netid",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "NetID of the user",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/LinkRow.tsx",
                  "line": 41,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 255,
              "name": "refreshResults",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback called when the search results should be refreshed\n(e.g. after link is updated)",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/LinkRow.tsx",
                  "line": 66,
                  "character": 16
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 256,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 257,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 243,
              "name": "showEditModal",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback called when the edit modal should be displayed",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/LinkRow.tsx",
                  "line": 47,
                  "character": 15
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 244,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 245,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 246,
                          "name": "linkInfo",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 226,
                            "name": "LinkInfo"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 251,
              "name": "showQrModal",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback called when the QR modal should be displayed",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/LinkRow.tsx",
                  "line": 59,
                  "character": 13
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 252,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 253,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 254,
                          "name": "linkInfo",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 226,
                            "name": "LinkInfo"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 247,
              "name": "showShareLinkModal",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback called when the share link modal should be displayed",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/LinkRow.tsx",
                  "line": 53,
                  "character": 20
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 248,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 249,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 250,
                          "name": "linkInfo",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 226,
                            "name": "LinkInfo"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [241, 242, 255, 243, 251, 247]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/LinkRow.tsx",
              "line": 30,
              "character": 22
            }
          ]
        },
        {
          "id": 258,
          "name": "State",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "State for the [[LinkRow]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 259,
              "name": "requestSent",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/LinkRow.tsx",
                  "line": 74,
                  "character": 13
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [259]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/LinkRow.tsx",
              "line": 73,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [260]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [240, 258]
        }
      ],
      "sources": [
        {
          "fileName": "src/components/LinkRow.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 276,
      "name": "components/OrgsSelect",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the Select component which allows the user to choose the types of links that are shown on dashboard"
      },
      "children": [
        {
          "id": 277,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[OrgsSelect]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 280,
              "name": "showByOrg",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback called when the user changes organization of whose links will be displayed",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/OrgsSelect.tsx",
                  "line": 34,
                  "character": 11
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 281,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 282,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 283,
                          "name": "orgs",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 413,
                            "name": "SearchSet"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 279,
              "name": "userOrgs",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The orgs of which the user is a member, used to display the list of\navailable link sets",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/OrgsSelect.tsx",
                  "line": 28,
                  "character": 10
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 113,
                  "name": "OrgInfo"
                }
              }
            },
            {
              "id": 278,
              "name": "userPrivileges",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's privileges, used to determine whether the user may use the \"all links\" set",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/OrgsSelect.tsx",
                  "line": 21,
                  "character": 16
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Set"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [280, 279, 278]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/OrgsSelect.tsx",
              "line": 16,
              "character": 22
            }
          ]
        },
        {
          "id": 284,
          "name": "OrgsSelect",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "comment": {
            "shortText": "The [[OrgsSelect]] component allows the user to choose specific filters which they want their links to be displayed",
            "tags": [
              {
                "tag": "param",
                "text": "The props\n",
                "param": "props"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/components/OrgsSelect.tsx",
              "line": 41,
              "character": 23
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 277,
                "name": "Props"
              }
            ],
            "name": "React.FC"
          },
          "defaultValue": "..."
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [277]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [284]
        }
      ],
      "sources": [
        {
          "fileName": "src/components/OrgsSelect.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 285,
      "name": "components/PendingRequests",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the [[PendingRequests]] component"
      },
      "children": [
        {
          "id": 293,
          "name": "PendingRequests",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "The [[PendingRequests]] component is responsible for displaying a list\nof pending requests to the user and allowing them to accept or deny the requests"
          },
          "children": [
            {
              "id": 294,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 295,
                  "name": "new PendingRequests",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 296,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 292,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 293,
                    "name": "PendingRequests"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component<Props, State>.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component<Props, State>.constructor"
              }
            },
            {
              "id": 301,
              "name": "acceptRequest",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/PendingRequests.tsx",
                  "line": 167,
                  "character": 15
                }
              ],
              "signatures": [
                {
                  "id": 302,
                  "name": "acceptRequest",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API requests to accept a request",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 303,
                      "name": "request_token",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The request token\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 297,
              "name": "componentDidMount",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/PendingRequests.tsx",
                  "line": 142,
                  "character": 25
                }
              ],
              "signatures": [
                {
                  "id": 298,
                  "name": "componentDidMount",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidMount"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidMount"
              }
            },
            {
              "id": 304,
              "name": "denyRequest",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/PendingRequests.tsx",
                  "line": 177,
                  "character": 13
                }
              ],
              "signatures": [
                {
                  "id": 305,
                  "name": "denyRequest",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API requests to deny a request",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 306,
                      "name": "request_token",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The request token\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 307,
              "name": "render",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/PendingRequests.tsx",
                  "line": 182,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 308,
                  "name": "render",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ReactNode"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.render"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.render"
              }
            },
            {
              "id": 299,
              "name": "updatePendingRequests",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/PendingRequests.tsx",
                  "line": 150,
                  "character": 23
                }
              ],
              "signatures": [
                {
                  "id": 300,
                  "name": "updatePendingRequests",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Fetch the list of pending requests from the server",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [294]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [301, 297, 304, 307, 299]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/PendingRequests.tsx",
              "line": 133,
              "character": 28
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 292,
                  "name": "Props"
                },
                {
                  "type": "reference",
                  "name": "State"
                }
              ],
              "name": "Component"
            }
          ]
        },
        {
          "id": 286,
          "name": "PendingRequest",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Data describing a pending access request",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 287,
              "name": "link_id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the link to which access has been requested",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/PendingRequests.tsx",
                  "line": 22,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 291,
              "name": "request_time",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The time at which the request was made",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/PendingRequests.tsx",
                  "line": 46,
                  "character": 14
                }
              ],
              "type": {
                "type": "reference",
                "name": "Date"
              }
            },
            {
              "id": 289,
              "name": "request_token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The request token, used to identify the request to the server",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/PendingRequests.tsx",
                  "line": 34,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 290,
              "name": "requesting_netid",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The NetID that made the request",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/PendingRequests.tsx",
                  "line": 40,
                  "character": 18
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 288,
              "name": "title",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Title of the link",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/PendingRequests.tsx",
                  "line": 28,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [287, 291, 289, 290, 288]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/PendingRequests.tsx",
              "line": 17,
              "character": 31
            }
          ]
        },
        {
          "id": 292,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[PendingRequests]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/components/PendingRequests.tsx",
              "line": 108,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [293]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [286, 292]
        }
      ],
      "sources": [
        {
          "fileName": "src/components/PendingRequests.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 309,
      "name": "components/QrCode",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the QR code modal"
      },
      "children": [
        {
          "id": 320,
          "name": "QrCodeModal",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "The [[QrCodeModal]] component implements the QR code modal as used on the dashboard"
          },
          "children": [
            {
              "id": 321,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 322,
                  "name": "new QrCodeModal",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 323,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 310,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 320,
                    "name": "QrCodeModal"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component<Props, State>.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component<Props, State>.constructor"
              }
            },
            {
              "id": 324,
              "name": "componentDidMount",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/QrCode.tsx",
                  "line": 75,
                  "character": 19
                }
              ],
              "signatures": [
                {
                  "id": 325,
                  "name": "componentDidMount",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidMount"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidMount"
              }
            },
            {
              "id": 326,
              "name": "componentDidUpdate",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/QrCode.tsx",
                  "line": 79,
                  "character": 20
                }
              ],
              "signatures": [
                {
                  "id": 327,
                  "name": "componentDidUpdate",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 328,
                      "name": "prevProps",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 310,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidUpdate"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidUpdate"
              }
            },
            {
              "id": 334,
              "name": "getQrDataUrl",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/QrCode.tsx",
                  "line": 114,
                  "character": 14
                }
              ],
              "signatures": [
                {
                  "id": 335,
                  "name": "getQrDataUrl",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Get a data URL of the QR code image",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            },
            {
              "id": 338,
              "name": "onDownload",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/QrCode.tsx",
                  "line": 149,
                  "character": 12
                }
              ],
              "signatures": [
                {
                  "id": 339,
                  "name": "onDownload",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Prompt the user to download the QR code for the selected alias",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 336,
              "name": "onPrint",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/QrCode.tsx",
                  "line": 128,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 337,
                  "name": "onPrint",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Open a popup window containing the QR code and prompt the user to print it",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 340,
              "name": "render",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/QrCode.tsx",
                  "line": 157,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 341,
                  "name": "render",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ReactNode"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.render"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.render"
              }
            },
            {
              "id": 329,
              "name": "resetAlias",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/QrCode.tsx",
                  "line": 89,
                  "character": 12
                }
              ],
              "signatures": [
                {
                  "id": 330,
                  "name": "resetAlias",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Set the currently active alias to the first alias of the link",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 331,
              "name": "setAlias",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/QrCode.tsx",
                  "line": 103,
                  "character": 10
                }
              ],
              "signatures": [
                {
                  "id": 332,
                  "name": "setAlias",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Update the selected alias and selected short URL",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 333,
                      "name": "alias",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The new alias\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [321]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [324, 326, 334, 338, 336, 340, 329, 331]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/QrCode.tsx",
              "line": 66,
              "character": 24
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 310,
                  "name": "Props"
                },
                {
                  "type": "reference",
                  "id": 317,
                  "name": "State"
                }
              ],
              "name": "Component"
            }
          ]
        },
        {
          "id": 310,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[QrCodeModal]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 312,
              "name": "linkInfo",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The [[LinkInfo]] of the link for which to display QR codes",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/QrCode.tsx",
                  "line": 28,
                  "character": 10
                }
              ],
              "type": {
                "type": "reference",
                "id": 226,
                "name": "LinkInfo"
              }
            },
            {
              "id": 314,
              "name": "onCancel",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback called when the modal is closed",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/QrCode.tsx",
                  "line": 40,
                  "character": 10
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 315,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 316,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 311,
              "name": "visible",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Whether the modal is vilible",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/QrCode.tsx",
                  "line": 22,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 313,
              "name": "width",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The width of the QR code",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/QrCode.tsx",
                  "line": 34,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [312, 314, 311, 313]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/QrCode.tsx",
              "line": 17,
              "character": 22
            }
          ]
        },
        {
          "id": 317,
          "name": "State",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "State for the [[QrCodeModal]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 318,
              "name": "selectedAlias",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The currently selected alias",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/QrCode.tsx",
                  "line": 52,
                  "character": 15
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "id": 319,
              "name": "selectedShortUrl",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The short URL (e.g. `https://go.rutgers.edu/<alias>`) corresponding to\nthe currently selected alias",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/QrCode.tsx",
                  "line": 59,
                  "character": 18
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [318, 319]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/QrCode.tsx",
              "line": 47,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [320]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [310, 317]
        }
      ],
      "sources": [
        {
          "fileName": "src/components/QrCode.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 342,
      "name": "components/SearchBox",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the search box"
      },
      "children": [
        {
          "id": 343,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[SearchBox]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 344,
              "name": "updateQueryString",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback called when the user executes a new search query",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/SearchBox.tsx",
                  "line": 18,
                  "character": 19
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 345,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 346,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 347,
                          "name": "newQueryString",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [344]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/SearchBox.tsx",
              "line": 13,
              "character": 22
            }
          ]
        },
        {
          "id": 348,
          "name": "SearchBox",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "comment": {
            "shortText": "The [[SearchBox]] component allows the user to enter and execute a search query",
            "tags": [
              {
                "tag": "param",
                "text": "The props\n",
                "param": "props"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/components/SearchBox.tsx",
              "line": 25,
              "character": 22
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 343,
                "name": "Props"
              }
            ],
            "name": "React.FC"
          },
          "defaultValue": "..."
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [343]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [348]
        }
      ],
      "sources": [
        {
          "fileName": "src/components/SearchBox.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 349,
      "name": "components/ShareLinkModal",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the [[ShareLinkModal]] component"
      },
      "children": [
        {
          "id": 382,
          "name": "ShareLinkModal",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "The [[ShareLinkModal]] component allows the user to edit the netIDs and organizations a link is shared with. The user may\n  * Add or remove NetIDs to be editors/viewers\n  * Add or remove Organizations to be editors/viewers",
            "tags": [
              {
                "tag": "param",
                "text": "The props\n",
                "param": "props"
              }
            ]
          },
          "children": [
            {
              "id": 383,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 384,
                  "name": "new ShareLinkModal",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 385,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 356,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 382,
                    "name": "ShareLinkModal"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component<Props, State>.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component<Props, State>.constructor"
              }
            },
            {
              "id": 386,
              "name": "formRef",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 148,
                  "character": 9
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "FormInstance"
                  }
                ],
                "name": "RefObject"
              },
              "defaultValue": "..."
            },
            {
              "id": 387,
              "name": "tableColumns",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 150,
                  "character": 14
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 350,
                    "name": "Entity"
                  }
                ],
                "name": "ColumnsType"
              },
              "defaultValue": "..."
            },
            {
              "id": 388,
              "name": "componentDidMount",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 220,
                  "character": 25
                }
              ],
              "signatures": [
                {
                  "id": 389,
                  "name": "componentDidMount",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidMount"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidMount"
              }
            },
            {
              "id": 390,
              "name": "refreshOrgs",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 228,
                  "character": 13
                }
              ],
              "signatures": [
                {
                  "id": 391,
                  "name": "refreshOrgs",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API requests to get list of org info, then update state",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 392,
              "name": "render",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 234,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 393,
                  "name": "render",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ReactNode"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.render"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.render"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [383]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [386, 387]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [388, 390, 392]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/ShareLinkModal.tsx",
              "line": 147,
              "character": 27
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 356,
                  "name": "Props"
                },
                {
                  "type": "reference",
                  "id": 378,
                  "name": "State"
                }
              ],
              "name": "Component"
            }
          ]
        },
        {
          "id": 356,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props of the [[ShareLinkModal]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 360,
              "name": "isLoading",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Whether the modal is waiting for a request to be fulfilled",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 84,
                  "character": 11
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 361,
              "name": "linkInfo",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The original [[LinkInfo]] of the link to edit",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 90,
                  "character": 10
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "id": 226,
                    "name": "LinkInfo"
                  }
                ]
              }
            },
            {
              "id": 362,
              "name": "onAddEntity",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback that will be called when user shares link with an entity"
              },
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 95,
                  "character": 13
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 363,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 364,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 365,
                          "name": "values",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 350,
                            "name": "Entity"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 375,
              "name": "onCancel",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback that will be called when the user closes the modal without\nsaving their changes",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 113,
                  "character": 10
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 376,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 377,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 372,
              "name": "onOk",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback that will be called when the user clicks the \"ok\" button of the modal",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 106,
                  "character": 6
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 373,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 374,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 366,
              "name": "onRemoveEntity",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Callback that will be called when user unshares link with an entity"
              },
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 100,
                  "character": 16
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 367,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 368,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 369,
                          "name": "_id",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 370,
                          "name": "type",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 371,
                          "name": "permission",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 359,
              "name": "people",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "List of netids/organizations who can edit the link",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 78,
                  "character": 8
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 350,
                  "name": "Entity"
                }
              }
            },
            {
              "id": 358,
              "name": "userPrivileges",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's privileges, used to determine whether the user\nmay create custom aliases",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 72,
                  "character": 16
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Set"
              }
            },
            {
              "id": 357,
              "name": "visible",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Whether the modal is visible",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 65,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [360, 361, 362, 375, 372, 366, 359, 358, 357]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/ShareLinkModal.tsx",
              "line": 60,
              "character": 22
            }
          ]
        },
        {
          "id": 378,
          "name": "State",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "State of the [[ShareLinkModal]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 379,
              "name": "addNetIDOrOrg",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Equals \"netid\" when user is adding a netid, \"org\" when user is adding an org",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 125,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 381,
              "name": "orgs",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Contains an [[OrgInfo]] for each org to be displayed",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 138,
                  "character": 6
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 113,
                  "name": "OrgInfo"
                }
              }
            },
            {
              "id": 380,
              "name": "showAll",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Whether to show all orgs or just orgs of which the user is a member. Option only\navailable to admins",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 132,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [379, 381, 380]
            }
          ],
          "sources": [
            {
              "fileName": "src/components/ShareLinkModal.tsx",
              "line": 120,
              "character": 22
            }
          ]
        },
        {
          "id": 350,
          "name": "Entity",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "shortText": "The final values of the share link form"
          },
          "sources": [
            {
              "fileName": "src/components/ShareLinkModal.tsx",
              "line": 34,
              "character": 18
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 351,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 352,
                  "name": "_id",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The id of the entity the link is shared with",
                    "tags": [
                      {
                        "tag": "property",
                        "text": "\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/components/ShareLinkModal.tsx",
                      "line": 39,
                      "character": 5
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 353,
                  "name": "name",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The name of the entity. For an organization, it would be the organization name. For a netid, it would be the netid."
                  },
                  "sources": [
                    {
                      "fileName": "src/components/ShareLinkModal.tsx",
                      "line": 43,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 355,
                  "name": "permission",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The permission of the entity the link is shared with (viewer/editor)",
                    "tags": [
                      {
                        "tag": "property",
                        "text": "\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/components/ShareLinkModal.tsx",
                      "line": 53,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 354,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The type of entity the link is shared with (netid/org)",
                    "tags": [
                      {
                        "tag": "property",
                        "text": "\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/components/ShareLinkModal.tsx",
                      "line": 48,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [352, 353, 355, 354]
                }
              ],
              "sources": [
                {
                  "fileName": "src/components/ShareLinkModal.tsx",
                  "line": 34,
                  "character": 20
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [382]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [356, 378]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [350]
        }
      ],
      "sources": [
        {
          "fileName": "src/components/ShareLinkModal.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 394,
      "name": "index",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "This is the entry point for the Shrunk SPA. It fetches the `shrunk_params`\ncookie, decodes and parses it, and then renders the [[Shrunk]] component"
      },
      "sources": [
        {
          "fileName": "src/index.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 395,
      "name": "lib/fix-antd-table",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/fix-antd-table.js",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 396,
      "name": "pages/Admin",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the [[Admin]] component"
      },
      "children": [
        {
          "id": 398,
          "name": "Admin",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "The [[Admin]] component allows the user to access the [[AdminStats]] page and\nto access the [[Role]] page for any role",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 399,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 400,
                  "name": "new Admin",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 401,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 397,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 398,
                    "name": "Admin"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component<Props, State>.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component<Props, State>.constructor"
              }
            },
            {
              "id": 402,
              "name": "componentDidMount",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Admin.tsx",
                  "line": 61,
                  "character": 25
                }
              ],
              "signatures": [
                {
                  "id": 403,
                  "name": "componentDidMount",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidMount"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidMount"
              }
            },
            {
              "id": 404,
              "name": "render",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Admin.tsx",
                  "line": 67,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 405,
                  "name": "render",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ReactNode"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.render"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.render"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [399]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [402, 404]
            }
          ],
          "sources": [
            {
              "fileName": "src/pages/Admin.tsx",
              "line": 53,
              "character": 18
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 397,
                  "name": "Props"
                },
                {
                  "type": "reference",
                  "name": "State"
                }
              ],
              "name": "Component"
            }
          ]
        },
        {
          "id": 397,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[Admin]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/pages/Admin.tsx",
              "line": 16,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [398]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [397]
        }
      ],
      "sources": [
        {
          "fileName": "src/pages/Admin.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 406,
      "name": "pages/Dashboard",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the [[Dashboard]] component"
      },
      "children": [
        {
          "id": 457,
          "name": "Dashboard",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "The [[Dashboard]] component implements most of Shrunk's core functionality.\nIt allows the user to\n  * Search for links\n  * Create, edit, and delete links\n  * Navigate to the stats page for link\n  * Create QR codes"
          },
          "children": [
            {
              "id": 458,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 459,
                  "name": "new Dashboard",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 460,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 430,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 457,
                    "name": "Dashboard"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component<Props, State>.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component<Props, State>.constructor"
              }
            },
            {
              "id": 461,
              "name": "componentDidMount",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 247,
                  "character": 25
                }
              ],
              "signatures": [
                {
                  "id": 462,
                  "name": "componentDidMount",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidMount"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidMount"
              }
            },
            {
              "id": 523,
              "name": "doEditLink",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 683,
                  "character": 12
                }
              ],
              "signatures": [
                {
                  "id": 524,
                  "name": "doEditLink",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Executes API requests to update a link",
                    "tags": [
                      {
                        "tag": "throws",
                        "text": "Error if the value of `this.state.editModalState.linkInfo` is `null`\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 525,
                      "name": "values",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The form values from the edit link form"
                      },
                      "type": {
                        "type": "reference",
                        "id": 165,
                        "name": "EditLinkFormValues"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 497,
              "name": "doQuery",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 429,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 498,
                  "name": "doQuery",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Sends a search request to the server. Does not update component state.\nUse [[setQuery]] or [[setPage]] if you want to update the current state\nof the search results.",
                    "returns": "The search results\n",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 499,
                      "name": "query",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The query to execute"
                      },
                      "type": {
                        "type": "reference",
                        "id": 419,
                        "name": "SearchQuery"
                      }
                    },
                    {
                      "id": 500,
                      "name": "skip",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The number of results to skip"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 501,
                      "name": "limit",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The number of results to return"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 502,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 503,
                              "name": "count",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/pages/Dashboard.tsx",
                                  "line": 433,
                                  "character": 20
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            },
                            {
                              "id": 504,
                              "name": "results",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/pages/Dashboard.tsx",
                                  "line": 433,
                                  "character": 37
                                }
                              ],
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "id": 226,
                                  "name": "LinkInfo"
                                }
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [503, 504]
                            }
                          ]
                        }
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 526,
              "name": "doShareLinkWithEntity",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 765,
                  "character": 23
                }
              ],
              "signatures": [
                {
                  "id": 527,
                  "name": "doShareLinkWithEntity",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Executes API request to add people the link is shared with",
                    "tags": [
                      {
                        "tag": "throws",
                        "text": "Error if the value of `this.state.shareLinkModalState.linkInfo` is `null`\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 528,
                      "name": "values",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The form values from the edit link form"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 529,
              "name": "doUnshareLinkWithEntity",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 825,
                  "character": 25
                }
              ],
              "signatures": [
                {
                  "id": 530,
                  "name": "doUnshareLinkWithEntity",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Executes API request to add people the link is shared with",
                    "tags": [
                      {
                        "tag": "throws",
                        "text": "Error if the value of `this.state.shareLinkModalState.linkInfo` is `null`\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 531,
                      "name": "_id",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The _id of the entity being removed"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 532,
                      "name": "type",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "Whether the entity is a netid or an org"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 533,
                      "name": "permission",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 463,
              "name": "fetchUserOrgs",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 255,
                  "character": 15
                }
              ],
              "signatures": [
                {
                  "id": 464,
                  "name": "fetchUserOrgs",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Fetch the organizations of which the user is a member.",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 510,
              "name": "getLinkACL",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 520,
                  "character": 12
                }
              ],
              "signatures": [
                {
                  "id": 511,
                  "name": "getLinkACL",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Retrieves viewer/editor data for a link and reorganizes it in a displayable manner."
                  },
                  "parameters": [
                    {
                      "id": 512,
                      "name": "linkInfo",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 226,
                        "name": "LinkInfo"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 407,
                          "name": "Entity"
                        }
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 508,
              "name": "hideEditModal",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 496,
                  "character": 15
                }
              ],
              "signatures": [
                {
                  "id": 509,
                  "name": "hideEditModal",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Hides the edit link modal",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 521,
              "name": "hideQrModal",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 658,
                  "character": 13
                }
              ],
              "signatures": [
                {
                  "id": 522,
                  "name": "hideQrModal",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Hide the QR code modal",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 516,
              "name": "hideShareLinkModal",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 619,
                  "character": 20
                }
              ],
              "signatures": [
                {
                  "id": 517,
                  "name": "hideShareLinkModal",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Hides the share link modal",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 495,
              "name": "refreshResults",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 415,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 496,
                  "name": "refreshResults",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Re-execute the currently active query.",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 534,
              "name": "render",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 879,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 535,
                  "name": "render",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ReactNode"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.render"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.render"
              }
            },
            {
              "id": 492,
              "name": "setPage",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 389,
                  "character": 9
                }
              ],
              "signatures": [
                {
                  "id": 493,
                  "name": "setPage",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Updates the current page of search results.",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      },
                      {
                        "tag": "throws",
                        "text": "Error if the current query is `null`"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 494,
                      "name": "newPage",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The new page\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 489,
              "name": "setQuery",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 369,
                  "character": 10
                }
              ],
              "signatures": [
                {
                  "id": 490,
                  "name": "setQuery",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Executes a search query and updates component state with the results",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 491,
                      "name": "newQuery",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The new query\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 419,
                        "name": "SearchQuery"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 468,
              "name": "showByOrg",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 277,
                  "character": 11
                }
              ],
              "signatures": [
                {
                  "id": 469,
                  "name": "showByOrg",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Updates the query string in the state and executes a search query",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 470,
                      "name": "orgs",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The organization of which links will be shown\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 413,
                        "name": "SearchSet"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 474,
              "name": "showDeletedLinks",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 302,
                  "character": 18
                }
              ],
              "signatures": [
                {
                  "id": 475,
                  "name": "showDeletedLinks",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Updates deleted links being shown/not shown in the state and executes a search query",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 476,
                      "name": "show_deleted_links",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "Whether deleted links are shown or not\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 505,
              "name": "showEditModal",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 484,
                  "character": 15
                }
              ],
              "signatures": [
                {
                  "id": 506,
                  "name": "showEditModal",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Displays the edit link modal",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 507,
                      "name": "linkInfo",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The [[LinkInfo]] of the link to edit\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 226,
                        "name": "LinkInfo"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 471,
              "name": "showExpiredLinks",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 288,
                  "character": 18
                }
              ],
              "signatures": [
                {
                  "id": 472,
                  "name": "showExpiredLinks",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Updates expired links being shown/not shown in the state and executes a search query",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 473,
                      "name": "show_expired_links",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "Whether expired links are shown or not\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 483,
              "name": "showLinksAfter",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 347,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 484,
                  "name": "showLinksAfter",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Updates the beginning time in the state and executes a search query",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 485,
                      "name": "begin_time",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "View links created after this date\n"
                      },
                      "type": {
                        "type": "reference",
                        "name": "Moment"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 486,
              "name": "showLinksBefore",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 358,
                  "character": 17
                }
              ],
              "signatures": [
                {
                  "id": 487,
                  "name": "showLinksBefore",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Updates the end time in the state and executes a search query",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 488,
                      "name": "end_time",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "View links created before this date\n"
                      },
                      "type": {
                        "type": "reference",
                        "name": "Moment"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 518,
              "name": "showQrModal",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 645,
                  "character": 13
                }
              ],
              "signatures": [
                {
                  "id": 519,
                  "name": "showQrModal",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Show the QR code modal",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 520,
                      "name": "linkInfo",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The [[LinkInfo]] of the link for which to generate QR codes\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 226,
                        "name": "LinkInfo"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 513,
              "name": "showShareLinkModal",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 605,
                  "character": 20
                }
              ],
              "signatures": [
                {
                  "id": 514,
                  "name": "showShareLinkModal",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Displays the share link modal",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 515,
                      "name": "linkInfo",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The [[LinkInfo]] of the link to manage sharing\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 226,
                        "name": "LinkInfo"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 477,
              "name": "sortLinksByKey",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 316,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 478,
                  "name": "sortLinksByKey",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Updates the sort category in the state and executes a search query",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 479,
                      "name": "key",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "Category that links can be sorted by\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 480,
              "name": "sortLinksByOrder",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 330,
                  "character": 18
                }
              ],
              "signatures": [
                {
                  "id": 481,
                  "name": "sortLinksByOrder",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Updates the sort order in the state and executes a search query",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 482,
                      "name": "order",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "Ascending or descending order\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 465,
              "name": "updateQueryString",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 265,
                  "character": 19
                }
              ],
              "signatures": [
                {
                  "id": 466,
                  "name": "updateQueryString",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Updates the query string state and executes a search query",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 467,
                      "name": "newQueryString",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The new query string\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [458]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                461, 523, 497, 526, 529, 463, 510, 508, 521, 516, 495, 534, 492,
                489, 468, 474, 505, 471, 483, 486, 518, 513, 477, 480, 465
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/pages/Dashboard.tsx",
              "line": 209,
              "character": 22
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 430,
                  "name": "Props"
                },
                {
                  "type": "reference",
                  "id": 433,
                  "name": "State"
                }
              ],
              "name": "Component"
            }
          ]
        },
        {
          "id": 430,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[Dashboard]] component.",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 432,
              "name": "netid",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 112,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 431,
              "name": "userPrivileges",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 111,
                  "character": 16
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Set"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [432, 431]
            }
          ],
          "sources": [
            {
              "fileName": "src/pages/Dashboard.tsx",
              "line": 110,
              "character": 22
            }
          ]
        },
        {
          "id": 419,
          "name": "SearchQuery",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "The type of a search query",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 428,
              "name": "begin_time",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The beginning of the time range to search",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 97,
                  "character": 12
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "name": "Moment"
                  }
                ]
              }
            },
            {
              "id": 429,
              "name": "end_time",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The end of the time range to search",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 103,
                  "character": 10
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "name": "Moment"
                  }
                ]
              }
            },
            {
              "id": 420,
              "name": "queryString",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "An array that holds query strings",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 68,
                  "character": 13
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 421,
              "name": "set",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The set of links to search (c.f. [[SearchSet]])",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 74,
                  "character": 5
                }
              ],
              "type": {
                "type": "reference",
                "id": 413,
                "name": "SearchSet"
              }
            },
            {
              "id": 423,
              "name": "show_deleted_links",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Whether to show deleted links",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 85,
                  "character": 20
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 422,
              "name": "show_expired_links",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Whether to show expired links",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 80,
                  "character": 20
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 424,
              "name": "sort",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The sort order and key",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 91,
                  "character": 6
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 425,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 426,
                      "name": "key",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/pages/Dashboard.tsx",
                          "line": 91,
                          "character": 13
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 427,
                      "name": "order",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/pages/Dashboard.tsx",
                          "line": 91,
                          "character": 28
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [426, 427]
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [428, 429, 420, 421, 423, 422, 424]
            }
          ],
          "sources": [
            {
              "fileName": "src/pages/Dashboard.tsx",
              "line": 63,
              "character": 28
            }
          ]
        },
        {
          "id": 433,
          "name": "State",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "State of the [[Dashboard]] component.",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 456,
              "name": "createLinkDropdownVisible",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Whether the create link dropdown is visible.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 197,
                  "character": 27
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 440,
              "name": "currentOffset",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The current offset in the search result, in terms of number of links.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 162,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 438,
              "name": "currentPage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The current page in the search results. Starts from `1`.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 150,
                  "character": 13
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 442,
              "name": "editModalState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The current state of the edit modal.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 174,
                  "character": 16
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 443,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 445,
                      "name": "linkInfo",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/pages/Dashboard.tsx",
                          "line": 174,
                          "character": 46
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reference",
                            "id": 226,
                            "name": "LinkInfo"
                          }
                        ]
                      }
                    },
                    {
                      "id": 444,
                      "name": "visible",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/pages/Dashboard.tsx",
                          "line": 174,
                          "character": 27
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [445, 444]
                    }
                  ]
                }
              }
            },
            {
              "id": 435,
              "name": "linkInfo",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "An array of [[LinkInfo]] objects for the current search results.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 131,
                  "character": 10
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 226,
                      "name": "LinkInfo"
                    }
                  }
                ]
              }
            },
            {
              "id": 436,
              "name": "linksPerPage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The number of links to display per page. Currently this is constant,\nbut that may change in the future.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 138,
                  "character": 14
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 452,
              "name": "qrModalState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The current state of the QR code modal.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 191,
                  "character": 14
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 453,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 455,
                      "name": "linkInfo",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/pages/Dashboard.tsx",
                          "line": 191,
                          "character": 44
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reference",
                            "id": 226,
                            "name": "LinkInfo"
                          }
                        ]
                      }
                    },
                    {
                      "id": 454,
                      "name": "visible",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/pages/Dashboard.tsx",
                          "line": 191,
                          "character": 25
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [455, 454]
                    }
                  ]
                }
              }
            },
            {
              "id": 437,
              "name": "query",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The current search query.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 144,
                  "character": 7
                }
              ],
              "type": {
                "type": "reference",
                "id": 419,
                "name": "SearchQuery"
              }
            },
            {
              "id": 446,
              "name": "shareLinkModalState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The current state of the share link modal. Contains the netids and orgs.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 180,
                  "character": 21
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 447,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 449,
                      "name": "entities",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/pages/Dashboard.tsx",
                          "line": 182,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 407,
                          "name": "Entity"
                        }
                      }
                    },
                    {
                      "id": 451,
                      "name": "isLoading",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/pages/Dashboard.tsx",
                          "line": 184,
                          "character": 13
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 450,
                      "name": "linkInfo",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/pages/Dashboard.tsx",
                          "line": 183,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reference",
                            "id": 226,
                            "name": "LinkInfo"
                          }
                        ]
                      }
                    },
                    {
                      "id": 448,
                      "name": "visible",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/pages/Dashboard.tsx",
                          "line": 181,
                          "character": 11
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [449, 451, 450, 448]
                    }
                  ]
                }
              }
            },
            {
              "id": 441,
              "name": "totalLinks",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The total number of links returned by the current query.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 168,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 439,
              "name": "totalPages",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The total number of pages of results for the current query.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 156,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 434,
              "name": "userOrgs",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The organizations of which the user is a member. This is used in the\nadvanced search settings menu.",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 125,
                  "character": 10
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 113,
                      "name": "OrgInfo"
                    }
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                456, 440, 438, 442, 435, 436, 452, 437, 446, 441, 439, 434
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/pages/Dashboard.tsx",
              "line": 119,
              "character": 22
            }
          ]
        },
        {
          "id": 407,
          "name": "Entity",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "shortText": "The final values of the share link form"
          },
          "sources": [
            {
              "fileName": "src/pages/Dashboard.tsx",
              "line": 29,
              "character": 18
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 408,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 409,
                  "name": "_id",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The id of the entity the link is shared with",
                    "tags": [
                      {
                        "tag": "property",
                        "text": "\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/pages/Dashboard.tsx",
                      "line": 34,
                      "character": 5
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 410,
                  "name": "name",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The name of the entity. For an organization, it would be the organization name. For a netid, it would be the netid."
                  },
                  "sources": [
                    {
                      "fileName": "src/pages/Dashboard.tsx",
                      "line": 38,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 412,
                  "name": "permission",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The permission of the entity the link is shared with (viewer/editor)",
                    "tags": [
                      {
                        "tag": "property",
                        "text": "\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/pages/Dashboard.tsx",
                      "line": 48,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 411,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The type of entity the link is shared with (netid/org)",
                    "tags": [
                      {
                        "tag": "property",
                        "text": "\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/pages/Dashboard.tsx",
                      "line": 43,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [409, 410, 412, 411]
                }
              ],
              "sources": [
                {
                  "fileName": "src/pages/Dashboard.tsx",
                  "line": 29,
                  "character": 20
                }
              ]
            }
          }
        },
        {
          "id": 413,
          "name": "SearchSet",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "shortText": "The type of the `set` parameter in the search query."
          },
          "sources": [
            {
              "fileName": "src/pages/Dashboard.tsx",
              "line": 55,
              "character": 21
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 414,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 415,
                      "name": "set",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/pages/Dashboard.tsx",
                          "line": 56,
                          "character": 9
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "user"
                          },
                          {
                            "type": "literal",
                            "value": "shared"
                          },
                          {
                            "type": "literal",
                            "value": "all"
                          }
                        ]
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [415]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/pages/Dashboard.tsx",
                      "line": 56,
                      "character": 3
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 416,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 418,
                      "name": "org",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/pages/Dashboard.tsx",
                          "line": 57,
                          "character": 21
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 417,
                      "name": "set",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/pages/Dashboard.tsx",
                          "line": 57,
                          "character": 9
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "org"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [418, 417]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/pages/Dashboard.tsx",
                      "line": 57,
                      "character": 3
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [457]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [430, 419, 433]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [407, 413]
        }
      ],
      "sources": [
        {
          "fileName": "src/pages/Dashboard.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 536,
      "name": "pages/Faq",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the [[Faq]] component"
      },
      "children": [
        {
          "id": 537,
          "name": "Faq",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "The [[Faq]] component is just a static FAQ page"
          },
          "children": [
            {
              "id": 538,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 539,
                  "name": "new Faq",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 540,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 537,
                    "name": "Faq"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "React.Component<void>.constructor"
                  }
                },
                {
                  "id": 541,
                  "name": "new Faq",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "comment": {
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": ""
                      },
                      {
                        "tag": "see",
                        "text": "https://reactjs.org/docs/legacy-context.html\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 542,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    },
                    {
                      "id": 543,
                      "name": "context",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 537,
                    "name": "Faq"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "React.Component<void>.constructor"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "React.Component<void>.constructor"
              }
            },
            {
              "id": 544,
              "name": "render",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Faq.tsx",
                  "line": 17,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 545,
                  "name": "render",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ReactNode"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.render"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.render"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [538]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [544]
            }
          ],
          "sources": [
            {
              "fileName": "src/pages/Faq.tsx",
              "line": 16,
              "character": 16
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "void"
                }
              ],
              "name": "Component"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [537]
        }
      ],
      "sources": [
        {
          "fileName": "src/pages/Faq.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 546,
      "name": "pages/FaqData",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 563,
          "name": "export=",
          "kind": 2,
          "kindString": "Namespace",
          "flags": {}
        },
        {
          "id": 547,
          "name": "export=",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 548,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 557,
                  "name": "cols",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reflection",
                      "declaration": {
                        "id": 558,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 562,
                            "name": "align",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "defaultValue": "'left'"
                          },
                          {
                            "id": 560,
                            "name": "dataIndex",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "defaultValue": "'action'"
                          },
                          {
                            "id": 561,
                            "name": "key",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "defaultValue": "'action'"
                          },
                          {
                            "id": 559,
                            "name": "title",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "defaultValue": "'Action'"
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [562, 560, 561, 559]
                          }
                        ]
                      }
                    }
                  },
                  "defaultValue": "..."
                },
                {
                  "id": 549,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reflection",
                      "declaration": {
                        "id": 550,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 552,
                            "name": "action",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "defaultValue": "'Visit Link'"
                          },
                          {
                            "id": 554,
                            "name": "editor",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "defaultValue": "'*'"
                          },
                          {
                            "id": 556,
                            "name": "everyone",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "defaultValue": "'*'"
                          },
                          {
                            "id": 551,
                            "name": "key",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "defaultValue": "'1'"
                          },
                          {
                            "id": 553,
                            "name": "owner",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "defaultValue": "'*'"
                          },
                          {
                            "id": 555,
                            "name": "viewer",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            "defaultValue": "'*'"
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [552, 554, 556, 551, 553, 555]
                          }
                        ]
                      }
                    }
                  },
                  "defaultValue": "..."
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [557, 549]
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Namespaces",
          "kind": 2,
          "children": [563]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [547]
        }
      ],
      "sources": [
        {
          "fileName": "src/pages/FaqData.js",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 564,
      "name": "pages/Orgs",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the orgs list view"
      },
      "children": [
        {
          "id": 567,
          "name": "Orgs",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "The [[Orgs]] component implements the orgs list view"
          },
          "children": [
            {
              "id": 568,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 569,
                  "name": "new Orgs",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 570,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 565,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 567,
                    "name": "Orgs"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component<Props, State>.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component<Props, State>.constructor"
              }
            },
            {
              "id": 571,
              "name": "componentDidMount",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Orgs.tsx",
                  "line": 197,
                  "character": 25
                }
              ],
              "signatures": [
                {
                  "id": 572,
                  "name": "componentDidMount",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidMount"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidMount"
              }
            },
            {
              "id": 573,
              "name": "componentDidUpdate",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Orgs.tsx",
                  "line": 201,
                  "character": 26
                }
              ],
              "signatures": [
                {
                  "id": 574,
                  "name": "componentDidUpdate",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 575,
                      "name": "_prevProps",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 565,
                        "name": "Props"
                      }
                    },
                    {
                      "id": 576,
                      "name": "prevState",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "State"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidUpdate"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidUpdate"
              }
            },
            {
              "id": 579,
              "name": "onCreateOrg",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Orgs.tsx",
                  "line": 222,
                  "character": 13
                }
              ],
              "signatures": [
                {
                  "id": 580,
                  "name": "onCreateOrg",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API requests to create a new org, then refresh org info",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 581,
                      "name": "name",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The name of the org to be created\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 582,
              "name": "onDeleteOrg",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Orgs.tsx",
                  "line": 233,
                  "character": 13
                }
              ],
              "signatures": [
                {
                  "id": 583,
                  "name": "onDeleteOrg",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API requests to delete an org, then refresh org info",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 584,
                      "name": "id",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The ID of the org to delete\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 577,
              "name": "refreshOrgs",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Orgs.tsx",
                  "line": 211,
                  "character": 13
                }
              ],
              "signatures": [
                {
                  "id": 578,
                  "name": "refreshOrgs",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API requests to get list of org info, then update state",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 585,
              "name": "render",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/Orgs.tsx",
                  "line": 238,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 586,
                  "name": "render",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ReactNode"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.render"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.render"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [568]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [571, 573, 579, 582, 577, 585]
            }
          ],
          "sources": [
            {
              "fileName": "src/pages/Orgs.tsx",
              "line": 187,
              "character": 17
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 565,
                  "name": "Props"
                },
                {
                  "type": "reference",
                  "name": "State"
                }
              ],
              "name": "Component"
            }
          ]
        },
        {
          "id": 565,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[Orgs]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 566,
              "name": "userPrivileges",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's privileges",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/Orgs.tsx",
                  "line": 37,
                  "character": 16
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Set"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [566]
            }
          ],
          "sources": [
            {
              "fileName": "src/pages/Orgs.tsx",
              "line": 32,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [567]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [565]
        }
      ],
      "sources": [
        {
          "fileName": "src/pages/Orgs.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 587,
      "name": "pages/subpages/ManageOrg",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the [[ManageOrg]] component"
      },
      "children": [
        {
          "id": 588,
          "name": "Props",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[ManageOrg]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/pages/subpages/ManageOrg.tsx",
              "line": 42,
              "character": 17
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 589,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 590,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/pages/subpages/ManageOrg.tsx",
                              "line": 42,
                              "character": 44
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [590]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/pages/subpages/ManageOrg.tsx",
                          "line": 42,
                          "character": 40
                        }
                      ]
                    }
                  }
                ],
                "name": "RouteComponentProps"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 591,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 592,
                      "name": "userNetid",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "The user's NetID",
                        "tags": [
                          {
                            "tag": "property",
                            "text": "\n"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "src/pages/subpages/ManageOrg.tsx",
                          "line": 47,
                          "character": 11
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 593,
                      "name": "userPrivileges",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "The user's privileges. Used to determine which operations the\nuser may perform on the org",
                        "tags": [
                          {
                            "tag": "property",
                            "text": "\n"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "src/pages/subpages/ManageOrg.tsx",
                          "line": 54,
                          "character": 16
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ],
                        "name": "Set"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [592, 593]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/pages/subpages/ManageOrg.tsx",
                      "line": 42,
                      "character": 57
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 594,
          "name": "ManageOrg",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "comment": {
            "shortText": "The [[ManageOrg]] component is just the [[ManageOrgInner]] component\nwrapped with `withRouter`"
          },
          "sources": [
            {
              "fileName": "src/pages/subpages/ManageOrg.tsx",
              "line": 438,
              "character": 22
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 588,
                        "name": "Props"
                      },
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "userNetid"
                          },
                          {
                            "type": "literal",
                            "value": "userPrivileges"
                          }
                        ]
                      }
                    ],
                    "name": "Pick"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ComponentClass"
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "query",
                    "queryType": {
                      "type": "reference",
                      "name": "ManageOrgInner"
                    }
                  }
                ],
                "name": "WithRouterStatics"
              }
            ]
          },
          "defaultValue": "..."
        }
      ],
      "groups": [
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [588]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [594]
        }
      ],
      "sources": [
        {
          "fileName": "src/pages/subpages/ManageOrg.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 595,
      "name": "pages/subpages/OrgCommon",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements some components used across multiple org pages"
      },
      "children": [
        {
          "id": 596,
          "name": "OrgAdminTag",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "comment": {
            "shortText": "A tag indicating the user is an admin of an org",
            "tags": [
              {
                "tag": "param",
                "text": "The props\n",
                "param": "props"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/pages/subpages/OrgCommon.tsx",
              "line": 13,
              "character": 24
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 597,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 598,
                      "name": "title",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/pages/subpages/OrgCommon.tsx",
                          "line": 13,
                          "character": 42
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [598]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/pages/subpages/OrgCommon.tsx",
                      "line": 13,
                      "character": 35
                    }
                  ]
                }
              }
            ],
            "name": "React.FC"
          },
          "defaultValue": "..."
        },
        {
          "id": 599,
          "name": "OrgMemberTag",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "comment": {
            "shortText": "A tag indicating the user is a member of an org",
            "tags": [
              {
                "tag": "param",
                "text": "The props\n",
                "param": "_props"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/pages/subpages/OrgCommon.tsx",
              "line": 23,
              "character": 25
            }
          ],
          "type": {
            "type": "reference",
            "name": "React.FC"
          },
          "defaultValue": "..."
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "kind": 32,
          "children": [596, 599]
        }
      ],
      "sources": [
        {
          "fileName": "src/pages/subpages/OrgCommon.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 600,
      "name": "pages/subpages/OrgStats",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the org statistics view"
      },
      "children": [
        {
          "id": 603,
          "name": "OrgStats",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "The [[OrgStats]] component implements the org statistics view"
          },
          "children": [
            {
              "id": 604,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 605,
                  "name": "new OrgStats",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 606,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 601,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 603,
                    "name": "OrgStats"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component<Props, State>.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component<Props, State>.constructor"
              }
            },
            {
              "id": 607,
              "name": "componentDidMount",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/subpages/OrgStats.tsx",
                  "line": 135,
                  "character": 25
                }
              ],
              "signatures": [
                {
                  "id": 608,
                  "name": "componentDidMount",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidMount"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidMount"
              }
            },
            {
              "id": 609,
              "name": "componentDidUpdate",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/subpages/OrgStats.tsx",
                  "line": 139,
                  "character": 26
                }
              ],
              "signatures": [
                {
                  "id": 610,
                  "name": "componentDidUpdate",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 611,
                      "name": "prevProps",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 601,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidUpdate"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidUpdate"
              }
            },
            {
              "id": 612,
              "name": "refreshOrgInfo",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/subpages/OrgStats.tsx",
                  "line": 149,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 613,
                  "name": "refreshOrgInfo",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API requests to fech org info, then update state",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 614,
              "name": "render",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/subpages/OrgStats.tsx",
                  "line": 170,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 615,
                  "name": "render",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ReactNode"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.render"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.render"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [604]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [607, 609, 612, 614]
            }
          ],
          "sources": [
            {
              "fileName": "src/pages/subpages/OrgStats.tsx",
              "line": 125,
              "character": 21
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 601,
                  "name": "Props"
                },
                {
                  "type": "reference",
                  "name": "State"
                }
              ],
              "name": "Component"
            }
          ]
        },
        {
          "id": 601,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[OrgStats]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 602,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the org",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/subpages/OrgStats.tsx",
                  "line": 23,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [602]
            }
          ],
          "sources": [
            {
              "fileName": "src/pages/subpages/OrgStats.tsx",
              "line": 18,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [603]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [601]
        }
      ],
      "sources": [
        {
          "fileName": "src/pages/subpages/OrgStats.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 616,
      "name": "pages/subpages/Stats",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements the link stats view"
      },
      "children": [
        {
          "id": 619,
          "name": "Stats",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "The [[Stats]] component implements the link stats view. It allows the user\nto optionally select an alias, then displays visit stats, GeoIP stats, User-Agent stats,\nand referer stats"
          },
          "children": [
            {
              "id": 620,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 621,
                  "name": "new Stats",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 622,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 617,
                        "name": "Props"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 619,
                    "name": "Stats"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component<Props, State>.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component<Props, State>.constructor"
              }
            },
            {
              "id": 638,
              "name": "clearVisitData",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/subpages/Stats.tsx",
                  "line": 492,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 639,
                  "name": "clearVisitData",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API requests to clear visit data associated with a link",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 623,
              "name": "componentDidMount",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/subpages/Stats.tsx",
                  "line": 393,
                  "character": 25
                }
              ],
              "signatures": [
                {
                  "id": 624,
                  "name": "componentDidMount",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidMount"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidMount"
              }
            },
            {
              "id": 625,
              "name": "componentDidUpdate",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/subpages/Stats.tsx",
                  "line": 398,
                  "character": 26
                }
              ],
              "signatures": [
                {
                  "id": 626,
                  "name": "componentDidUpdate",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 627,
                      "name": "prevProps",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 617,
                        "name": "Props"
                      }
                    },
                    {
                      "id": 628,
                      "name": "prevState",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "State"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.componentDidUpdate"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.componentDidUpdate"
              }
            },
            {
              "id": 636,
              "name": "downloadCsv",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/subpages/Stats.tsx",
                  "line": 482,
                  "character": 13
                }
              ],
              "signatures": [
                {
                  "id": 637,
                  "name": "downloadCsv",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Prompt the user to download a CSV file of visits to the selected alias",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 640,
              "name": "render",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/subpages/Stats.tsx",
                  "line": 499,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 641,
                  "name": "render",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ReactNode"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "React.Component.render"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "React.Component.render"
              }
            },
            {
              "id": 633,
              "name": "setAlias",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/subpages/Stats.tsx",
                  "line": 468,
                  "character": 10
                }
              ],
              "signatures": [
                {
                  "id": 634,
                  "name": "setAlias",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Set the alias and then update stats",
                    "tags": [
                      {
                        "tag": "method",
                        "text": ""
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 635,
                      "name": "alias",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The name of an alias, or a number to select all aliases (stupid hack why did I even do that?)\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 629,
              "name": "updateLinkInfo",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/subpages/Stats.tsx",
                  "line": 415,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 630,
                  "name": "updateLinkInfo",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API requests to get link info for the current link ID, then update state",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 631,
              "name": "updateStats",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/pages/subpages/Stats.tsx",
                  "line": 437,
                  "character": 13
                }
              ],
              "signatures": [
                {
                  "id": 632,
                  "name": "updateStats",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Execute API requests to fetch all stats for the current link and alias, then update\nstate",
                    "tags": [
                      {
                        "tag": "method",
                        "text": "\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [620]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [638, 623, 625, 636, 640, 633, 629, 631]
            }
          ],
          "sources": [
            {
              "fileName": "src/pages/subpages/Stats.tsx",
              "line": 377,
              "character": 18
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 617,
                  "name": "Props"
                },
                {
                  "type": "reference",
                  "name": "State"
                }
              ],
              "name": "Component"
            }
          ]
        },
        {
          "id": 617,
          "name": "Props",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Props for the [[Stats]] component",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 618,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The ID of the link",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/subpages/Stats.tsx",
                  "line": 46,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [618]
            }
          ],
          "sources": [
            {
              "fileName": "src/pages/subpages/Stats.tsx",
              "line": 41,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [619]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [617]
        }
      ],
      "sources": [
        {
          "fileName": "src/pages/subpages/Stats.tsx",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 642,
      "name": "pages/subpages/StatsCommon",
      "kind": 1,
      "kindString": "Module",
      "flags": {},
      "comment": {
        "shortText": "Implements some components used across various stats pages"
      },
      "children": [
        {
          "id": 643,
          "name": "GeoipStats",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "GeoIP statistics for the US and the world",
            "tags": [
              {
                "tag": "interface",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 644,
              "name": "us",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Data for US states",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/subpages/StatsCommon.tsx",
                  "line": 43,
                  "character": 4
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "MapDatum"
                }
              }
            },
            {
              "id": 645,
              "name": "world",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Data for countries",
                "tags": [
                  {
                    "tag": "property",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/pages/subpages/StatsCommon.tsx",
                  "line": 49,
                  "character": 7
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "MapDatum"
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [644, 645]
            }
          ],
          "sources": [
            {
              "fileName": "src/pages/subpages/StatsCommon.tsx",
              "line": 38,
              "character": 27
            }
          ]
        },
        {
          "id": 647,
          "name": "GeoipChart",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "comment": {
            "shortText": "The [[GeoipChart]] component displays the US and world data from a [[GeoipStats]]\nobject in two maps",
            "tags": [
              {
                "tag": "param",
                "text": "The props\n",
                "param": "props"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/pages/subpages/StatsCommon.tsx",
              "line": 116,
              "character": 23
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 648,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 649,
                      "name": "geoipStats",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/pages/subpages/StatsCommon.tsx",
                          "line": 116,
                          "character": 46
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "id": 643,
                            "name": "GeoipStats"
                          },
                          {
                            "type": "literal",
                            "value": null
                          }
                        ]
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [649]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/pages/subpages/StatsCommon.tsx",
                      "line": 116,
                      "character": 34
                    }
                  ]
                }
              }
            ],
            "name": "React.FC"
          },
          "defaultValue": "..."
        },
        {
          "id": 646,
          "name": "MENU_ITEMS",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "comment": {
            "shortText": "Which items to show in the Highcharts menu",
            "tags": [
              {
                "tag": "constant",
                "text": "\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/pages/subpages/StatsCommon.tsx",
              "line": 57,
              "character": 23
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          "defaultValue": "..."
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [643]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [647, 646]
        }
      ],
      "sources": [
        {
          "fileName": "src/pages/subpages/StatsCommon.tsx",
          "line": 1,
          "character": 0
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Modules",
      "kind": 1,
      "children": [
        1, 19, 36, 55, 85, 88, 108, 132, 150, 164, 187, 215, 239, 276, 285, 309,
        342, 349, 394, 395, 396, 406, 536, 546, 564, 587, 595, 600, 616, 642
      ]
    }
  ]
}
